{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\"; // TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n} // See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\n\n\nconst safeReact = { ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n} // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nexport function unstable_createUseMediaQuery() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    themeId\n  } = params;\n  return function useMediaQuery(queryInput) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let theme = useTheme();\n\n    if (theme && themeId) {\n      theme = theme[themeId] || theme;\n    } // Wait for jsdom to support the match media feature.\n    // All the browsers MUI support have this built-in.\n    // This defensive check is here for simplicity.\n    // Most of the time, the match media logic isn't central to people tests.\n\n\n    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    const {\n      defaultMatches = false,\n      matchMedia = supportMatchMedia ? window.matchMedia : null,\n      ssrMatchMedia = null,\n      noSsr = false\n    } = getThemeProps({\n      name: 'MuiUseMediaQuery',\n      props: options,\n      theme\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof queryInput === 'function' && theme === null) {\n        console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n      }\n    }\n\n    let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n    query = query.replace(/^@media( ?)/m, '');\n    const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n    const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue({\n        query,\n        match\n      });\n    }\n\n    return match;\n  };\n}\nconst useMediaQuery = unstable_createUseMediaQuery();\nexport default useMediaQuery;","map":{"version":3,"names":["React","useEnhancedEffect","getThemeProps","useTheme","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","useState","matches","undefined","queryList","updateMatch","addEventListener","removeEventListener","safeReact","maybeReactUseSyncExternalStore","useSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","getSnapshot","subscribe","mediaQueryList","notify","unstable_createUseMediaQuery","params","themeId","useMediaQuery","queryInput","options","theme","supportMatchMedia","window","name","props","process","env","NODE_ENV","console","error","join","replace","useMediaQueryImplementation","useDebugValue"],"sources":["D:/base-react-redux/node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createUseMediaQuery(params = {}) {\n  const {\n    themeId\n  } = params;\n  return function useMediaQuery(queryInput, options = {}) {\n    let theme = useTheme();\n    if (theme && themeId) {\n      theme = theme[themeId] || theme;\n    }\n    // Wait for jsdom to support the match media feature.\n    // All the browsers MUI support have this built-in.\n    // This defensive check is here for simplicity.\n    // Most of the time, the match media logic isn't central to people tests.\n    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    const {\n      defaultMatches = false,\n      matchMedia = supportMatchMedia ? window.matchMedia : null,\n      ssrMatchMedia = null,\n      noSsr = false\n    } = getThemeProps({\n      name: 'MuiUseMediaQuery',\n      props: options,\n      theme\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof queryInput === 'function' && theme === null) {\n        console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n      }\n    }\n    let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n    query = query.replace(/^@media( ?)/m, '');\n    const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n    const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue({\n        query,\n        match\n      });\n    }\n    return match;\n  };\n}\nconst useMediaQuery = unstable_createUseMediaQuery();\nexport default useMediaQuery;"],"mappings":"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"},"metadata":{},"sourceType":"module"}